name: Container-Management

services:
  
  # Container Management - Portainer CE
  container-management:
    container_name: Portainer-CE
    image: portainer/portainer-ce:lts
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command: -H tcp://socket-proxy:2375
    volumes:
        - portainer_data:/data
        # - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      docker_socket_proxy:
      reverse_proxy_private:
    ports:
      - "9000:9000"
    environment:
      TZ: ${TZ-Europe/London}
      DOMAINNAME:
    labels:
      portainer.hide: true
      traefik.enable: true
      # HTTP Routers
      traefik.http.routers.portainer.entrypoints: web
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAINNAME}`)
      # Middlewares
      # traefik.http.routers.portainer.middlewares: chain-oauth@file
      # HTTP Services
      traefik.http.routers.portainer.service: portainer-svc
      traefik.http.services.portainer-svc.loadbalancer.server.port: 9000

  # Reverse Proxy - Traefik
  reverse-proxy:
    container_name: Traefik
    image: traefik:latest
    depends_on:
      - socket-proxy
      - container-management
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command:
      - --log.level=INFO
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
      # Default Docker network
      - --providers.docker.network=reverse_proxy_private
      # Use Docker socket proxy
      - --providers.docker.endpoint=tcp://socket-proxy:2375
    volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKERDIR}/logs/${DOMAINNAME}/traefik:/logs
    networks:
      reverse_proxy_private:
        ipv4_address: 192.168.101.254
      reverse_proxy_public:
        ipv4_address: 192.168.102.254
      docker_socket_proxy:
    ports:
      - "80:80"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      TZ: ${TZ-Europe/London}
      DOMAINNAME:
      DOCKERDIR:
    labels:
      portainer.hide: true
      traefik.enable: true
      # HTTP Routers
      traefik.http.routers.traefik.entrypoints: web
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAINNAME}`)
      # Middlewares
      # traefik.http.routers.portainer.middlewares: chain-oauth@file
      # HTTP Services
      traefik.http.routers.traefik.service: traefik-svc
      traefik.http.services.traefik-svc.loadbalancer.server.port: 8080
  
  # Docker Socket Proxy
  socket-proxy:
    container_name: socket-proxy
    image: lscr.io/linuxserver/socket-proxy:latest
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      docker_socket_proxy:
        ipv4_address: 192.168.100.254
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1
      # Not always needed
      - ALLOW_START=1
      - ALLOW_STOP=1
      - ALLOW_RESTARTS=1
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1
      - INFO=1
      - NETWORKS=1
      - NODES=0
      - PLUGINS=0
      - SERVICES=1
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1
      - VOLUMES=1
    labels:
      portainer.hide: true

networks:
  docker_socket_proxy:
    name: docker_socket_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
          
  reverse_proxy_private:
    name: reverse_proxy_private
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.101.0/24
  
  reverse_proxy_public:
    name: reverse_proxy_public
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.102.0/24

volumes:
  portainer_data:
    name: portainer_data
    external: true
      
     