services:
  # ais-catcher
  ais-catcher:
    container_name: ais-catcher
    image: "ghcr.io/jvde-github/ais-catcher-control:edge"
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    privileged: true
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - ais-catcher-data:/etc/AIS-catcher
      - /home/${LOCALUSER}/ais/webassets:/etc/webassets
    networks:
      reverse_proxy_private:
      traefik-kop:
    ports:
      - 8100:8100
    labels:
      kop.namespace: kop
      traefik.enable: true
      # Web Viewer Local
      traefik.http.routers.ais.entrypoints: web
      traefik.http.routers.ais.rule: Host(`ais.${DOMAINNAME}`)
      traefik.http.routers.ais.service: ais-svc
      traefik.http.services.ais-svc.loadbalancer.server.port: 8100
      # Admin Local
      traefik.http.routers.ais-admin.entrypoints: web
      traefik.http.routers.ais-admin.rule: Host(`ais-admin.${DOMAINNAME}`)
      traefik.http.routers.ais-admin.service: ais-admin-svc
      traefik.http.services.ais-admin-svc.loadbalancer.server.port: 8110
      # Web Viewer Public
      traefik.http.routers.ais-public.service: ais-public-svc
      traefik.http.services.ais-public-svc.loadbalancer.server.url: ais.${DOMAINNAME}
      traefik.http.routers.ais-public.rule: Host(`ais.${ROOT_DOMAIN}`)
      traefik.http.routers.ais-public.entrypoints: websecure
      traefik.http.routers.ais-public.tls: true
      traefik.http.routers.ais-public.tls.certresolver: letsencrypt
      traefik.http.routers.ais-public.tls.domains[0].main: "${ROOT_DOMAIN}"
      traefik.http.routers.ais-public.tls.domains[0].sans: "*.${ROOT_DOMAIN}"
      traefik.http.routers.ais-public.middlewares: ais-public
      traefik.http.middlewares.ais-public.replacepath.path: /

    profiles:
      - prod

volumes:
  ais-catcher-data:
    name: ais-catcher-data
